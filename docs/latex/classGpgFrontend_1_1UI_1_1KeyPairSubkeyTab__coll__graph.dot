digraph "GpgFrontend::UI::KeyPairSubkeyTab"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{GpgFrontend::UI::KeyPair\lSubkeyTab\n|- subkey_list_\l- list_box_\l- detail_box_\l- subkey_opera_menu_\l- key_size_var_label_\l- expire_var_label_\l- created_var_label_\l- algorithm_var_label_\l- key_id_var_label_\l- fingerprint_var_label_\l- usage_var_label_\l- master_key_exist_var\l_label_\l- card_key_label_\l|+ KeyPairSubkeyTab()\l# contextMenuEvent()\l- create_subkey_list()\l- create_subkey_opera\l_menu()\l- get_selected_subkey()\l- slot_add_subkey()\l- slot_refresh_subkey\l_list()\l- slot_refresh_subkey\l_detail()\l- slot_edit_subkey()\l- slot_revoke_subkey()\l- slot_refresh_key_info()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{QWidget\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -key_" ,arrowhead="odiamond"];
  Node3 [label="{GpgFrontend::GpgKey\n||+ IsGood()\l+ GetId()\l+ GetName()\l+ GetEmail()\l+ GetComment()\l+ GetFingerprint()\l+ GetProtocol()\l+ GetOwnerTrust()\l+ GetPublicKeyAlgo()\l+ GetLastUpdateTime()\land 30 more...\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",URL="$classGpgFrontend_1_1GpgKey.html",tooltip=" "];
  Node4 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -key_ref_" ,arrowhead="odiamond"];
  Node4 [label="{std::unique_ptr\< struct\l _gpgme_key, _key_ref\l_deleter \>\n|+ ptr\l|+ operator-\>()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node4 [dir="back",color="orange",fontsize="10",style="solid",label=" \< struct _gpgme_key,\l _key_ref_deleter \>" ];
  Node5 [label="{std::unique_ptr\< T \>\n||+ operator-\>()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node5 [color="grey25",fontsize="10",style="solid",label=" +ptr" ,arrowhead="odiamond"];
  Node6 [label="{T\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -buffered_subkeys_" ,arrowhead="odiamond"];
  Node7 [label="{std::vector\< GpgFrontend\l::GpgSubKey \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node7 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node8 [label="{GpgFrontend::GpgSubKey\n||+ GetID()\l+ GetFingerprint()\l+ GetPubkeyAlgo()\l+ GetKeyLength()\l+ IsHasEncryptionCapability()\l+ IsHasSigningCapability()\l+ IsHasCertificationCapability()\l+ IsHasAuthenticationCapability()\l+ IsPrivateKey()\l+ IsExpired()\land 13 more...\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",URL="$classGpgFrontend_1_1GpgSubKey.html",tooltip=" "];
  Node9 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -_subkey_ref" ,arrowhead="odiamond"];
  Node9 [label="{std::unique_ptr\< struct\l _gpgme_subkey, std::function\l\< void(gpgme_subkey_t)\> \>\n|+ ptr\l|+ operator-\>()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node9 [dir="back",color="orange",fontsize="10",style="solid",label=" \< struct _gpgme_subkey,\l std::function\< void(gpgme\l_subkey_t)\> \>" ];
  Node10 -> Node7 [dir="back",color="orange",fontsize="10",style="solid",label=" \< GpgFrontend::GpgSubKey \>" ];
  Node10 [label="{std::vector\< T \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node10 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond"];
}
