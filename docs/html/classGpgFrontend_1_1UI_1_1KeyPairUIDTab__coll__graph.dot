digraph "GpgFrontend::UI::KeyPairUIDTab"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{GpgFrontend::UI::KeyPair\lUIDTab\n|- uid_list_\l- sig_list_\l- tofu_tabs_\l- manage_selected_uid\l_menu_\l- uid_popup_menu_\l- sign_popup_menu_\l|+ KeyPairUIDTab()\l# contextMenuEvent()\l- create_uid_list()\l- create_sign_list()\l- create_manage_uid_menu()\l- create_uid_popup_menu()\l- create_sign_popup_menu()\l- get_uid_checked()\l- get_uid_selected()\l- get_sign_selected()\l- slot_refresh_uid_list()\l- slot_refresh_tofu_info()\l- slot_refresh_sig_list()\l- slot_add_sign()\l- slot_add_sign_single()\l- slot_add_uid()\l- slot_del_uid()\l- slot_del_uid_single()\l- slot_set_primary_uid()\l- slot_del_sign()\l- slot_refresh_key()\l- slot_add_uid_result()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{QWidget\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_key_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{GpgFrontend::GpgKey\n||+ IsGood()\l+ GetId()\l+ GetName()\l+ GetEmail()\l+ GetComment()\l+ GetFingerprint()\l+ GetProtocol()\l+ GetOwnerTrust()\l+ GetPublicKeyAlgo()\l+ GetLastUpdateTime()\land 30 more...\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",URL="$classGpgFrontend_1_1GpgKey.html",tooltip=" "];
  Node4 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -key_ref_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{std::unique_ptr\< struct\l _gpgme_key, _key_ref\l_deleter \>\n|+ ptr\l|+ operator-\>()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node4 [dir="back",color="orange",fontsize="10",style="solid",label=" \< struct _gpgme_key,\l _key_ref_deleter \>" ,fontname="Helvetica"];
  Node5 [label="{std::unique_ptr\< T \>\n||+ operator-\>()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node5 [color="grey25",fontsize="10",style="solid",label=" +ptr" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{T\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -buffered_uids_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{std::vector\< GpgFrontend\l::GpgUID \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node7 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{GpgFrontend::GpgUID\n||+ GetName()\l+ GetEmail()\l+ GetComment()\l+ GetUID()\l+ GetRevoked()\l+ GetInvalid()\l+ GetTofuInfos()\l+ GetSignatures()\l+ GpgUID()\l+ GpgUID()\l+ GpgUID()\l+ GpgUID()\l+ operator=()\l+ operator=()\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",URL="$classGpgFrontend_1_1GpgUID.html",tooltip=" "];
  Node9 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -uid_ref_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 [label="{std::unique_ptr\< struct\l _gpgme_user_id, std::\lfunction\< void(gpgme_user\l_id_t)\> \>\n|+ ptr\l|+ operator-\>()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node9 [dir="back",color="orange",fontsize="10",style="solid",label=" \< struct _gpgme_user\l_id, std::function\< void\l(gpgme_user_id_t)\> \>" ,fontname="Helvetica"];
  Node10 -> Node7 [dir="back",color="orange",fontsize="10",style="solid",label=" \< GpgFrontend::GpgUID \>" ,fontname="Helvetica"];
  Node10 [label="{std::vector\< T \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node10 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -buffered_signatures_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 [label="{std::vector\< GpgFrontend\l::GpgKeySignature \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node12 -> Node11 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 [label="{GpgFrontend::GpgKeySignature\n||+ IsRevoked()\l+ IsExpired()\l+ IsInvalid()\l+ IsExportable()\l+ GetStatus()\l+ GetKeyID()\l+ GetPubkeyAlgo()\l+ GetCreateTime()\l+ GetExpireTime()\l+ GetUID()\land 10 more...\l}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",URL="$classGpgFrontend_1_1GpgKeySignature.html",tooltip=" "];
  Node13 -> Node12 [color="grey25",fontsize="10",style="solid",label=" -signature_ref_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node13 [label="{std::unique_ptr\< struct\l _gpgme_key_sig, std::\lfunction\< void(gpgme_key\l_sig_t)\> \>\n|+ ptr\l|+ operator-\>()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node13 [dir="back",color="orange",fontsize="10",style="solid",label=" \< struct _gpgme_key\l_sig, std::function\l\< void(gpgme_key_sig_t)\> \>" ,fontname="Helvetica"];
  Node10 -> Node11 [dir="back",color="orange",fontsize="10",style="solid",label=" \< GpgFrontend::GpgKeySignature \>" ,fontname="Helvetica"];
}
