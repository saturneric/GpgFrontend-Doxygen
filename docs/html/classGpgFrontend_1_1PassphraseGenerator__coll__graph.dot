digraph "GpgFrontend::PassphraseGenerator"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{GpgFrontend::PassphraseGenerator\n|+ rd_\l+ mt_\l|+ PassphraseGenerator()\l+ Generate()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="The PassphraseGenerator class."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{GpgFrontend::SingletonFunction\lObject\< PassphraseGenerator \>\n|- channel_\l- _default_channel\l|+ GetChannel()\l+ SingletonFunctionObject()\l+ SingletonFunctionObject()\l+ operator=()\l+ GetInstance()\l+ CreateInstance()\l+ CreateInstance()\l+ ReleaseChannel()\l+ GetDefaultChannel()\l# SingletonFunctionObject()\l# SingletonFunctionObject()\l# ~SingletonFunctionObject()\l# SetChannel()\l- find_object_in_channel()\l- set_object_in_channel()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classGpgFrontend_1_1SingletonFunctionObject.html",tooltip=" "];
  Node3 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -_instance_mutex" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{std::mutex\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -_instances_mutex" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{std::shared_mutex\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -_instance" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{std::unique_ptr\< Passphrase\lGenerator \>\n||+ operator-\>()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node1 -> Node5 [color="grey25",fontsize="10",style="solid",label=" +ptr" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 -> Node5 [dir="back",color="orange",fontsize="10",style="solid",label=" \< PassphraseGenerator \>" ,fontname="Helvetica"];
  Node6 [label="{std::unique_ptr\< T \>\n||+ operator-\>()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node6 [color="grey25",fontsize="10",style="solid",label=" +ptr" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{T\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -_instances_map" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{std::map\< int, std\l::unique_ptr\< PassphraseGenerator \> \>\n|+ keys\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node8 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 -> Node8 [dir="back",color="orange",fontsize="10",style="solid",label=" \< int, std::unique\l_ptr\< PassphraseGenerator \> \>" ,fontname="Helvetica"];
  Node9 [label="{std::map\< K, T \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node10 -> Node9 [color="grey25",fontsize="10",style="solid",label=" +keys" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 [label="{K\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node9 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 -> Node2 [dir="back",color="orange",fontsize="10",style="solid",label=" \< PassphraseGenerator \>" ,fontname="Helvetica"];
  Node11 [label="{GpgFrontend::SingletonFunction\lObject\< T \>\n|- channel_\l- _default_channel\l- _instance\l|+ GetChannel()\l+ SingletonFunctionObject()\l+ SingletonFunctionObject()\l+ operator=()\l+ GetInstance()\l+ CreateInstance()\l+ CreateInstance()\l+ ReleaseChannel()\l+ GetDefaultChannel()\l# SingletonFunctionObject()\l# SingletonFunctionObject()\l# ~SingletonFunctionObject()\l# SetChannel()\l- find_object_in_channel()\l- set_object_in_channel()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classGpgFrontend_1_1SingletonFunctionObject.html",tooltip=" "];
  Node3 -> Node11 [color="grey25",fontsize="10",style="solid",label=" -_instance_mutex" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 -> Node11 [color="grey25",fontsize="10",style="solid",label=" -_instances_mutex" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 -> Node11 [color="grey25",fontsize="10",style="solid",label=" -_instances_map" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 [label="{std::map\< int, std\l::unique_ptr\< T \> \>\n|+ keys\l+ elements\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node9 -> Node12 [dir="back",color="orange",fontsize="10",style="solid",label=" \< int, std::unique\l_ptr\< T \> \>" ,fontname="Helvetica"];
}
