digraph "GpgFrontend::GpgSignature"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{GpgFrontend::GpgSignature\n||+ GetValidity()\l+ GetStatus()\l+ GetSummary()\l+ GetPubkeyAlgo()\l+ GetHashAlgo()\l+ GetCreateTime()\l+ GetExpireTime()\l+ GetFingerprint()\l+ GpgSignature()\l+ ~GpgSignature()\l+ GpgSignature()\l+ GpgSignature()\l+ GpgSignature()\l+ operator=()\l+ operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -signature_ref_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{std::unique_ptr\< struct\l _gpgme_signature, std\l::function\< void(gpgme\l_signature_t)\> \>\n|+ ptr\l|+ operator-\>()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node3 -> Node2 [dir="back",color="orange",fontsize="10",style="solid",label=" \< struct _gpgme_signature,\l std::function\< void(gpgme\l_signature_t)\> \>" ,fontname="Helvetica"];
  Node3 [label="{std::unique_ptr\< T \>\n||+ operator-\>()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node3 [color="grey25",fontsize="10",style="solid",label=" +ptr" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{T\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
}
